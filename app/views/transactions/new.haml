- content_for :extra_javascript do
  :javascript
    ST.transaction.initializeFreeTransactionForm('#{I18n.locale}');

  %script(src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC_X7cRyDirhw6XoZ1T4Sh-pcSd7yrFR_4&libraries=places&region=IN")
  
  :javascript
     var placeSearch, autocomplete;
      var componentForm = {
        locality: 'long_name',
        administrative_area_level_1: 'long_name',
        postal_code: 'short_name'
      };
      
     google.maps.event.addDomListener(window, 'load', initAutocomplete);
     function initAutocomplete() {
       var input = document.getElementById('autocomplete');
       var autocomplete = new google.maps.places.Autocomplete(input);
       autocomplete.addListener('place_changed', function(){
            var place = this.getPlace();
            for (var component in componentForm) {
            document.getElementById(component).value = '';
            document.getElementById(component).disabled = false;
        }
           for (var i = 0; i < place.address_components.length; i++) {
          var addressType = place.address_components[i].types[0];
          if (componentForm[addressType]) {
            var val = place.address_components[i][componentForm[addressType]];
            document.getElementById(addressType).value = val;
            
          }
        }
        
        var location = jQuery('#autocomplete').val();
        var locality = jQuery('#locality').val();
        var address = a.split(locality);
        var address2 = address[0].slice(0, -1);
        jQuery('#address2').val(address2);
         });
     }
  
     function geolocate() {
       if (navigator.geolocation) {
           navigator.geolocation.getCurrentPosition(function(position) {
              var geolocation = {
               lat: position.coords.latitude,
               lng: position.coords.longitude
              };
              var circle = new google.maps.Circle({
              center: geolocation,
              radius: position.coords.accuracy
            });
            autocomplete.setBounds(circle.getBounds());
          });
        }
       }
   
- content_for :title_header do
  %h1
    = action_button_label
    = link_to(listing[:title], listing_path(listing[:id]))

#new_message_form.centered-section

  - author_link = link_to(author[:display_name], person_path(id: author[:username]))

  .preauthorize-section
    %h2.preauthorize-details-title
      = t("listing_conversations.preauthorize.details")

    %ul.no-bullets
      %li
        %div
          = t("listing_conversations.preauthorize.by", listing: link_to("#{listing[:title]}", listing_path(listing[:id])), author: author_link).html_safe

      - m_price_break_down.each do |price_break_down|
        %li
          = render partial: "transactions/price_break_down", locals: price_break_down

  = form_tag(form_action, method: :post, id: "transaction-form") do

    = hidden_field_tag(:start_on, booking_start)
    = hidden_field_tag(:end_on, booking_end)

    .preauthorize-section

      %h2 Phone Number
      .row
        .col-12
          %input{:minlength => "10", :maxlength => "11", :name => "phone_number", :required => "required", :type => "number", :value => @phone_number}/
          
    -if @payment_button == 1  
      %h2{:style => "margin-top:30px"} Address1
      .row
        .col-12
          %input{:name => "address1", :id => "address1", :required => "required", :type => "text"}
              
          %input{:name => "address2", :id => "address2", :required => "required", :type => "hidden"}
 
      %h2{:style => "margin-top:30px"} Location
      .row
        .col-12
          %input{:name => "autocomplete", :id => "autocomplete" ,:required => "required", :type => "text", :onFocus => "geolocate()"}/
              
      %h2{:style => "margin-top:30px"} City
      .row
        .col-12
          %input{:name => "locality", :id => "locality" ,:required => "required", :type => "text"}/
              
      %h2{:style => "margin-top:30px"} State
      .row
        .col-12
          %input{:name => "state", :id => "administrative_area_level_1" ,:required => "required", :type => "text"}/
              
      %h2{:style => "margin-top:30px"} Pincode
      .row
        .col-12
          %input{:name => "pin_code", :id => "postal_code" ,:required => "required", :type => "text"}/

              
              
              
      %h2
        = t("conversations.new.send_message_to_user", person: author_link).html_safe
      .row
        .col-12
          = text_area_tag(:message, nil, :class => "text_area", :required => "required")

      - if quantity
        = hidden_field_tag(:quantity, quantity)
        .row
          .col-12
          - if @payment_button == 1  
            = button_tag t("conversations.new.proceed_to_payment"), :class => "send_button"
          - else
            = button_tag t("conversations.new.send_message"), :class => "send_button"
            

