## Catch all requests without Host header
server {
        listen  80;
        server_name     "";
        return  444;
}

## Redirect http to https
server {
        listen 80 default_server;
        server_name test.secondcry.com;
        return 301 https://$server_name$request_uri;
}

# Secondcry server configuration
#
server {
        listen 80;
        #listen [::]:80 default_server;

        # SSL configuration
        #
        listen 443 ssl;
        #listen [::]:443 ssl default_server;
        #
        # Self signed certs generated by the ssl-cert package
        # Don't use them in a production server!
        #
        # include snippets/snakeoil.conf;

        # root /usr/share/nginx/html;

        # Add index.php to the list if you are using PHP
        #index index.html index.htm index.nginx-debian.html;

        server_name test.secondcry.com;
        passenger_enabled on;
        rails_env    production;
        root         /home/secondcry_tester/secondcryrepo/public;

        ssl_session_cache       shared:SSL:3m;
        ssl_session_timeout     180m;
        ssl_protocols   TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers       on;
        ssl_ciphers     ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

        ssl_certificate /etc/ssl/certs/secondcry.certchain.crt;
        ssl_certificate_key     /etc/ssl/private/secondcry.key;

        # location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
        #       try_files $uri $uri/ =404;
        #}

        # redirect server error pages to the static page /50x.html
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        location ~ ^/assets/ {
          expires 1y;
          add_header Cache-Control public;

          add_header ETag "";
          break;
        }

	rewrite ^(/testing/.*)$ /blog/$1 redirect;

        #https://intercityup.com/blog/running-a-wordpress-blog-and-a-rails-application-on-the-same-url-on-the-same-server.html
        location ^~ /blog {
          root /home/secondcry_tester/wordpress;
          index index.php;
          try_files $uri $uri/ /blog/index.php;

          location ~ \.php$ {
            # Mitigate https://httpoxy.org/ vulnerabilities
            fastcgi_param HTTP_PROXY "";

            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            #fastcgi_pass unix:/var/run/php5-fpm.sock;
            fastcgi_pass 127.0.0.1:9090;
            fastcgi_index index.php;
            include fastcgi_params;
            fastcgi_param       SCRIPT_FILENAME $document_root$fastcgi_script_name;
          }

          client_max_body_size 2M;
        }
}
